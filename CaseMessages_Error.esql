





CREATE COMPUTE MODULE CaseMessages_Error
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 400;
		SET OutputRoot.JSON.Data.failureOrigin = 'EFORMS';
		
		IF InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" = 200 THEN
				CREATE FIELD OutputRoot.JSON.Data.cause IDENTITY (JSON.Array)cause;
				SET OutputRoot.JSON.Data.cause[1].code = 400;
				SET OutputRoot.JSON.Data.cause[1].message = InputRoot.JSON.Data.messages;
		ELSE
			CREATE LASTCHILD OF InputRoot DOMAIN('JSON') PARSE(InputRoot.BLOB.BLOB);  
			
			SET OutputRoot.JSON.Data.cause[1].code = InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code";
			SET OutputRoot.JSON.Data.cause[1].message = InputRoot.JSON.Data.message;
			
		END IF;
/*
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('JSON');
		
		CREATE LASTCHILD OF InputRoot DOMAIN('JSON') PARSE(InputRoot.BLOB.BLOB);  
			
			SET OutputRoot.JSON.Data.cause[1].code = InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code";
			SET OutputRoot.JSON.Data.cause[1].message = InputRoot.JSON.Data.message;
	*/		
		

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
